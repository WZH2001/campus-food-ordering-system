<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wuzhenhua.cfos.mapper.student.CollectMapper">
    <select id="notCollectFoodInfo" resultType="com.wuzhenhua.cfos.model.VO.student.AllMenuInfoVO">
        select s.seller_id as sellerId, s.window_name as windowName,
               s.window_address as windowAddress, f.food_id as foodId,
               f.food_name as foodName, f.food_price as foodPrice,
               f.today_sell as todaySell, f.is_recommend as isRecommend
        from food f
        inner join seller s
        on f.seller_id = s.seller_id
        where s.is_delete = 0
        and f.is_delete = 0
        and f.food_id not in(
                select food_id from collect where student_id = #{studentId}
            )
        limit #{pageNum}, #{pageSize}
    </select>

    <select id="notCollectFoodInfoTotal" resultType="java.lang.Integer">
        select count(*)
        from food f
                 inner join seller s
                            on f.seller_id = s.seller_id
        where s.is_delete = 0
          and f.is_delete = 0
          and f.food_id not in(
            select food_id from collect where student_id = #{studentId}
        )
    </select>

    <select id="notCollectFoodInfoFuzzy" resultType="com.wuzhenhua.cfos.model.VO.student.AllMenuInfoVO">
        select s.seller_id as sellerId, s.window_name as windowName,
               s.window_address as windowAddress, f.food_id as foodId,
               f.food_name as foodName, f.food_price as foodPrice,
               f.today_sell as todaySell, f.is_recommend as isRecommend
        from food f
                 inner join seller s
                            on f.seller_id = s.seller_id
        where s.is_delete = 0
          and f.is_delete = 0
        <if test="foodName != null and foodName != ''">
            and food_name like concat('%', #{foodName}, '%')
        </if>
        <if test="foodPrice != null and foodPrice != ''">
            and food_price = #{foodPrice}
        </if>
        <if test="windowName != null and windowName != ''">
            and window_name like concat('%', #{windowName}, '%')
        </if>
          and f.food_id not in(
            select food_id from collect where student_id = #{studentId}
          )
          limit #{pageNum}, #{pageSize}
    </select>

    <select id="notCollectFoodInfoFuzzyTotal" resultType="java.lang.Integer">
        select count(*)
        from food f
        inner join seller s
        on f.seller_id = s.seller_id
        where s.is_delete = 0
        and f.is_delete = 0
        <if test="foodName != null and foodName != ''">
            and food_name like concat('%', #{foodName}, '%')
        </if>
        <if test="foodPrice != null and foodPrice != ''">
            and food_price = #{foodPrice}
        </if>
        <if test="windowName != null and windowName != ''">
            and window_name like concat('%', #{windowName}, '%')
        </if>
        and f.food_id not in(
        select food_id from collect where student_id = #{studentId}
        )
    </select>

    <insert id="singleCollect">
        insert into collect(collect_id, collect_time, student_id, food_id)
        values(#{collectId},#{collectTime},#{studentId}, #{foodId})
    </insert>

    <insert id="batchCollect">
        insert into collect(collect_id, collect_time, student_id, food_id)
        values
        <foreach collection="batchCollectDTOList" item="batchCollectDTO" separator=",">
            (#{batchCollectDTO.collectId}, #{batchCollectDTO.collectTime}, #{batchCollectDTO.studentId}, #{batchCollectDTO.foodId})
        </foreach>
    </insert>
</mapper>